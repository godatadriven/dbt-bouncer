name: 'dbt-bouncer'
description: 'Configure and enforce conventions for your dbt project.'
inputs:
  config-file:
    default: 'dbt-bouncer.yml'
    description: 'Location of the YML config file.'
    required: false
  output-file:
    default: ''
    description: 'Name of the json file where check metadata will be saved.'
    required: false
  send-pr-comment:
    default: 'true'
    description: |
      true: Send a comment to the GitHub PR with a list of failed checks.
      false: Do not send a comment.
    required: false
  show-all-failures:
    default: 'false'
    description: Print all failures to the console.
    required: false
  verbose:
    default: 'false'
    description: Run dbt-bouncer in verbose mode.
    required: false

runs:
  using: composite

  steps:
    - name: Assemble `output-file` parameter
      id: assemble-output-file-param
      shell: bash
      run: >
        if [[ "${{ inputs.output-file }}" = "" ]]; then
          echo "output-file-param=" >> $GITHUB_OUTPUT
        else
          echo "output-file-param=--output-file /app/${{ inputs.output-file }}" >> $GITHUB_OUTPUT
        fi

    - name: Assemble `show-all-failures` parameter
      id: assemble-show-all-failures-param
      shell: bash
      run: >
        if [[ "${{ inputs.show-all-failures }}" = "false" ]]; then
          echo "show-all-failures-param=" >> $GITHUB_OUTPUT
        else
          echo "show-all-failures-param=-v" >> $GITHUB_OUTPUT
        fi

    - name: Assemble `verbose` parameter
      id: assemble-verbose-param
      shell: bash
      run: >
        if [[ "${{ inputs.verbose }}" = "false" ]]; then
          echo "verbose-param=" >> $GITHUB_OUTPUT
        else
          echo "verbose-param=-v" >> $GITHUB_OUTPUT
        fi

    - name: Run dbt-bouncer
      id: run-dbt-bouncer
      shell: bash
      run: >
        docker run --rm \
          --env CREATE_DBT_BOUNCER_CONFIG_FILE=false \
          --env GITHUB_REF='${{ github.ref }}' \
          --env GITHUB_REPOSITORY='${{ github.repository }}' \
          --env GITHUB_RUN_ID='${{ github.run_id }}' \
          --env GITHUB_TOKEN='${{ github.token }}' \
          --volume "$GITHUB_WORKSPACE":/app \
          ghcr.io/godatadriven/dbt-bouncer:v1.11.1 \
          --config-file /app/${{ inputs.config-file }} \
          --create-pr-comment-file ${{ inputs.send-pr-comment }} \
          ${{ steps.assemble-output-file-param.outputs.output-file-param }} ${{ steps.assemble-show-all-failures-param.outputs.show-all-failures-param }} ${{ steps.assemble-verbose-param.outputs.verbose-param }}

    - name: Send PR comment
      if: always() && inputs.send-pr-comment == 'true' && steps.run-dbt-bouncer.outcome != 'success'
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: >
        gh pr comment ${{ github.event.number }} \
          --repo ${{ github.repository }} \
          --body-file github-comment.md
