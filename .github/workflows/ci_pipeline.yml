---
name: CI pipeline

on:
    pull_request:
        branches:
            - main

jobs:
    pre-commit:
        name: Run pre-commit
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Python
              id: setup-python
              uses: actions/setup-python@v5

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
                  installer-parallel: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-ansi

            - name: Run pre-commit
              run: poetry run pre-commit run

    ci_pipeline:
        name: CI Pipeline
        needs: [pre-commit]
        runs-on: ubuntu-latest
        permissions:
            contents: write
            id-token: write
            issues: write
            pull-requests: write
        strategy:
            fail-fast: false
            matrix:
                python-version:
                    - '3.8'
                    - '3.9'
                    - '3.10'
                    - '3.11'
                    - '3.12'
        steps:
            - uses: actions/checkout@v4

            - name: Setup Python
              id: setup-python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
                  installer-parallel: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-ansi

            - name: Run pytest
              run: make test | tee pytest-coverage.txt && exit ${PIPESTATUS[0]}

            - name: Pytest coverage comment
              if: matrix.python-version == '3.11'
              uses: MishaKav/pytest-coverage-comment@main
              with:
                  pytest-coverage-path: ./pytest-coverage.txt
                  title: Coverage Report
                  badge-title: Coverage
                  junitxml-path: ./coverage.xml
